#ifndef STARRYSKY_TEXTUREATLAS_HPP
#define STARRYSKY_TEXTUREATLAS_HPP
#include <vector>
#include <string>
#include <string_view>
#include <tuple>
#include <util/Rect.hpp>
#include <util/Bitmask.hpp>
#include <GL/Texture.hpp>

/* Class for loading .bin.gz files and associated .dds.gz files, generated by crunch */
class TextureAtlas{
public:
	explicit TextureAtlas(const std::string_view file_path);
	TextureAtlas(const TextureAtlas& other) = delete;
	const Texture findSubTexture(std::string_view name) const;
//	const Bitmask& getBitmask(const Texture& tex) const;
	std::vector<std::string> getSubTextureNames() const;
	uint32_t handle() const;
	~TextureAtlas();
private:
	uint32_t handle_;
	uint32_t width;
	uint32_t height;
	uint32_t num_layers;
	std::string names_interned;
	std::vector<std::pair<size_t, size_t>> names;
	/* SoA */
	std::vector<uint16_t> uvs;
	std::vector<uint16_t> sizes;
	std::vector<uint16_t> layers;
	std::vector<uint8_t>  rotated;
	std::vector<Bitmask>  masks;

	bool loadDDSgz(const std::string_view path, uint16_t layer);
	bool loadBINgz(const std::string_view path, Bitmask& mask);
};

#endif
